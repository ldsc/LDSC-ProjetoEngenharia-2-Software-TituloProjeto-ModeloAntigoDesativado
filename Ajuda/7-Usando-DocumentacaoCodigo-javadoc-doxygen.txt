
Como usar javadoc/doxygen?
==========================

1) Instale no seu computador o programa doxygen
Site:
http://www.stack.nl/~dimitri/doxygen/index.html

Neste site tem mais informações sobre o doxygen e exemplos de documentação no formato javadoc.

Outro site com exemplos:
https://en.wikibooks.org/wiki/LaTeX/Source_Code_Listings

2) Leia o material da disciplina que fala do formato de documentação javadoc e do doxyfile.

3) Crie seus códigos colocando a documentação no formato javadoc.
Basicamente:
/// Comentário da classe.
class NomeClasse {
/// Comentário do atributo.
int atributo;
/// Comentário do método.
int Metodo()  {}
};

4) Gerando a documentação:
- Abra um terminal e vá para o diretório com o programa a ser documentado usando o comando cd (ex: cd caminho).
- Execute o comando (doxygen -g) para gerar o arquivo de configuração do doxygen (Doxyfile) caso este arquivo ainda não exista.
- Modifique o arquivo Doxyfile, informe que a documentação deve ser armazenada
no diretório ../doc/manualDesenvolvedor-doxygen/html
- Execute o comando (doxygen) para gerar a documentação do código.
O doxygen irá criar um subdiretório chamado html, nele você encontrará um arquivo index.html
que deve ser aberto usando um navegador (como o Chrome ou Firefox).
- Abra o arquivo listagens/html/index.html e veja como ficou a documentação, navegue pelos arquivos.
- Note que você pode mudar os parâmetros do arquivo DOXYFILE. Usando um editor de texto como o kate abra o arquivo
DOXYFILE; leia cada parágrafo e a seguir ative/desative determinada opção; a seguir rode novamente o doxygen,
e verifique como ficou a documentação (é bem simples).
Quando mais opções SIM, mais completa fica a documentação (e demora mais para gerar).
- Na apostila/livro do curso temos aula e apresentação sobre o uso do formato javadoc.


Nota:
Note que usamos em todos os arquivos de código a codificação de caracteres ISO-8859-1 (latin1).

Abaixo uma solução caso os códigos usem UTF-8.
Fonte: https://en.wikibooks.org/wiki/LaTeX/Source_Code_Listings
Encoding issue
By default, listings does not support multi-byte encoding for source code. The extendedchar option only works for 8-bits encodings such as latin1.

To handle UTF-8, you should tell listings how to interpret the special characters by defining them like so

\lstset{literate=
  {á}{{\'a}}1 {é}{{\'e}}1 {í}{{\'i}}1 {ó}{{\'o}}1 {ú}{{\'u}}1
  {Á}{{\'A}}1 {É}{{\'E}}1 {Í}{{\'I}}1 {Ó}{{\'O}}1 {Ú}{{\'U}}1
  {à}{{\`a}}1 {è}{{\`e}}1 {ì}{{\`i}}1 {ò}{{\`o}}1 {ù}{{\`u}}1
  {À}{{\`A}}1 {È}{{\`E}}1 {Ì}{{\`I}}1 {Ò}{{\`O}}1 {Ù}{{\`U}}1
  {ä}{{\"a}}1 {ë}{{\"e}}1 {ï}{{\"i}}1 {ö}{{\"o}}1 {ü}{{\"u}}1
  {Ä}{{\"A}}1 {Ë}{{\"E}}1 {Ï}{{\"I}}1 {Ö}{{\"O}}1 {Ü}{{\"U}}1
  {â}{{\^a}}1 {ê}{{\^e}}1 {î}{{\^i}}1 {ô}{{\^o}}1 {û}{{\^u}}1
  {Â}{{\^A}}1 {Ê}{{\^E}}1 {Î}{{\^I}}1 {Ô}{{\^O}}1 {Û}{{\^U}}1
  {ã}{{\~a}}1 {ẽ}{{\~e}}1 {ĩ}{{\~i}}1 {õ}{{\~o}}1 {ũ}{{\~u}}1
  {Ã}{{\~A}}1 {Ẽ}{{\~E}}1 {Ĩ}{{\~I}}1 {Õ}{{\~O}}1 {Ũ}{{\~U}}1
  {œ}{{\oe}}1 {Œ}{{\OE}}1 {æ}{{\ae}}1 {Æ}{{\AE}}1 {ß}{{\ss}}1
  {ű}{{\H{u}}}1 {Ű}{{\H{U}}}1 {ő}{{\H{o}}}1 {Ő}{{\H{O}}}1
  {ç}{{\c c}}1 {Ç}{{\c C}}1 {ø}{{\o}}1 {Ø}{{\O}}1 {å}{{\r a}}1 {Å}{{\r A}}1
  {€}{{\euro}}1 {£}{{\pounds}}1 {«}{{\guillemotleft}}1
  {»}{{\guillemotright}}1 {ñ}{{\~n}}1 {Ñ}{{\~N}}1 {¿}{{?`}}1 {¡}{{!`}}1
}
